/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.11).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ExpenseRequest;
import io.swagger.model.ExpenseResponse;
import io.swagger.model.ExpensesResponse;
import org.threeten.bp.LocalDate;
import io.swagger.model.NotFound;
import io.swagger.model.ResultResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-10-28T15:54:29.791Z[GMT]")
@Api(value = "v1", description = "the v1 API")
public interface V1Api {

    @ApiOperation(value = "adds a expense", nickname = "addExpense", notes = "支出を登録する", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "registered successfully"),
        @ApiResponse(code = 400, message = "invalid input") })
    @RequestMapping(value = "/v1/expenses",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addExpense(@ApiParam(value = "expense object"  )  @Valid @RequestBody ExpenseRequest body);


    @ApiOperation(value = "gets a expense", nickname = "getExpense", notes = "支出詳細を取得する ", response = ExpenseResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "get successfully", response = ExpenseResponse.class),
        @ApiResponse(code = 404, message = "not found expenseId", response = NotFound.class) })
    @RequestMapping(value = "/v1/expenses/{expenseId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ExpenseResponse> getExpense(@ApiParam(value = "",required=true) @PathVariable("expenseId") String expenseId);


    @ApiOperation(value = "gets expenses", nickname = "getExpenses", notes = "支出一覧を取得する", response = ExpensesResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "get succesfully", response = ExpensesResponse.class) })
    @RequestMapping(value = "/v1/expenses",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ExpensesResponse> getExpenses(@ApiParam(value = "開始日") @Valid @RequestParam(value = "beginDate", required = false) LocalDate beginDate,@ApiParam(value = "終了日") @Valid @RequestParam(value = "endDate", required = false) LocalDate endDate);


    @ApiOperation(value = "gets Result", nickname = "getResult", notes = "その月の収支結果を取得する ", response = ResultResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "get successfully", response = ResultResponse.class),
        @ApiResponse(code = 404, message = "not found resultId", response = NotFound.class) })
    @RequestMapping(value = "/v1/results/{resultId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ResultResponse> getResult(@ApiParam(value = "",required=true) @PathVariable("resultId") String resultId);

}
